{"version":3,"sources":["reducers/services.js","reducers/pods.js","common/constants.js","reducers/nodes.js","reducers/deployments.js","reducers/meta.js","reducers/index.js","common/colors.js","components/Common/Meter.jsx","core/utils.js","core/resource.js","components/Pod/Pod.jsx","components/Pod/PodList.jsx","components/Service/Service.jsx","core/index.js","containers/Service.jsx","components/Common/Loading.jsx","components/Service/ServiceList.jsx","actions/index.js","containers/ServiceList.jsx","components/Common/LinearMeter.jsx","components/Node/Node.jsx","containers/Node.jsx","components/Node/NodeList.jsx","containers/NodeList.jsx","components/Deployment/Deployment.jsx","containers/Deployment.jsx","components/Deployment/DeploymentList.jsx","containers/DeploymentList.jsx","components/Root.jsx","containers/Root.jsx","App.js","serviceWorker.js","index.js"],"names":["services","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","payload","filter","s","meta","name","map","pods","newPod","status","phase","modifiedPod","pod","service","reason","podState","involved_object_name","objectSpread","usage","cpu","memory","Running","FailedScheduling","Unhealthy","Failed","BackOff","CrashLoopBackOff","Pending","Killing","Pulling","Scheduled","Started","nodes","newNode","modifiedNode","node","resource","combineReducers","deployments","materialColors","Meter","Math","max","document","body","scrollWidth","documentElement","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","options","assign","this","props","renderTo","el","units","displayValue","width","getWidth","height","minValue","startAngle","ticksAngle","valueBox","maxValue","minorTicks","strokeTicks","highlights","sections","highlightsWidth","ticksWidth","colorPlate","borderShadowWidth","borders","needleType","needleColor","needleWidth","needleCircleSize","needleCircleOuter","needleCircleInner","animationDuration","animationRule","value","colorMajorTicks","colorMinorTicks","title","colorTitle","colorUnits","colorNumbers","gauge","RadialGauge","draw","_this","update","react_default","a","createElement","ref","canvas","Component","ensureValue","obj","fallback","returnValue","e","getRequest","request","capacity","isNaN","getUsage","resourceUsage","getResourceSectionsAndUsage","resourceRequest","resourceLimit","limit","getLimit","from","to","color","getNodeSectionsAndUsage","getSumResources","resourceCallback","total","forEach","p","_","classNames","require","statusColors","PProgress","NProgress","Pod","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ts","moment","created","fromNow","classes","circle","inner-shadow","_this2","setInterval","setState","tooltip","className","style","backgroundColor","margin","PodList","flex","flexDirection","display","data","components_Pod_Pod","key","id","Service","_this$props","cpuDetail","memoryDetail","col","span","padding","background","row","fontSize","fontWeight","textAlign","textTransform","marginTop","marginBottom","divider","Pod_PodList","Common_Meter","top","left","round","filterResources","container","resources","includes","findNode","find","n","getResourcesFromNode","r","getCPUMetrics","allResources","defaultMetrics","maxUsageResource","reduce","x","y","xUsage","yUsage","findMaxCPUUsageResource","available","consumed","getAvailableCPU","getUMemoryMetrics","findMaxMemoryUsageResource","getAvailableMemory","connect","ownProps","cpuMetrics","memoryMetrics","runningPodsLength","ip","hasWarning","podAvailability","Loading","empty","description","ServiceList","initialize","item","containers_Service","Common_Loading","initializeConnection","dispatch","path","socket","WebSocket","window","location","host","onopen","console","log","onmessage","onMessage","JSON","parse","LinearMeter","majorTicks","borderOuterWidth","borderInnerWidth","barBeginCircle","tickSide","numberSide","needleSide","needleShadow","needleStart","needleEnd","colorNeedle","colorNeedleEnd","animationTarget","barWidth","fontNumbersSize","ticksWidthMinor","animateOnInit","fontTitleSize","colorBarProgress","LinearGauge","exclamation","src","alt","tick","Node","readyStatus","circle-lg","zIndex","Common_LinearMeter","currentPods","NodeList","containers_Node","Deployment","deployment","DeploymentList","containers_Deployment","Root","rootStyle","containers_DeploymentList","containers_ServiceList","containers_NodeList","es_alert","message","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","kubeState","applyMiddleware","thunk","locale","relativeTime","future","past","m","mm","h","hh","d","dd","M","MM","yy","App","es","containers_Root","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b60bfc72.chunk.js","sourcesContent":["const services = (state = [], action) => {\n  switch (action.type) {\n    case 'SVC_ADDED':\n      return [...state, action.payload];\n    case 'SVC_DELETED':\n      return state.filter(s => s.meta.name !== action.payload.meta.name);\n    case 'SVC_MODIFIED':\n      return state.map(s => {\n        if (s.meta.name === action.payload.meta.name)\n          return action.payload;\n        else\n          return s;\n      });\n    default:\n      return state;\n  }\n}\n\nexport default services;","import * as constants from \"../common/constants\";\n\nconst pods = (state = [], action) => {\n  switch (action.type) {\n\n    case 'POD_ADDED':\n      const newPod = action.payload;\n      newPod.state = status[action.payload.status.phase];\n      return [...state, newPod];\n\n    case 'POD_DELETED':\n      return state.filter(s => s.meta.name !== action.payload.meta.name);\n\n    case 'POD_MODIFIED':\n      const modifiedPod = action.payload;\n      modifiedPod.state = status[action.payload.status.phase];\n      return state.map(pod => pod.meta.name === action.payload.meta.name ? modifiedPod : pod);\n\n    case 'SVC_DELETED':\n      return state.filter(pod => pod.service !== action.payload.meta.name);\n\n    case 'EVENT':\n      const reason = action.payload.reason;\n      const podState = status[reason];\n\n      if (!podState)\n        return state;\n\n      return state.map(pod => pod.meta.name === action.payload.involved_object_name ? { ...pod, state: podState } : pod);\n\n    case 'METRICS':\n      const usage = {\n        cpu: action.payload.cpu,\n        memory: action.payload.memory\n      };\n\n      return state.map(pod => pod.meta.name === action.payload.pod ? { ...pod, usage } : pod);\n\n    default:\n      return state;\n  }\n}\n\nexport default pods;\n\nconst status = {\n  \"Running\": constants.RUNNING,\n  \"FailedScheduling\": constants.FAILED,\n  \"Unhealthy\": constants.FAILED,\n  \"Failed\": constants.FAILED,\n  \"BackOff\": constants.FAILED,\n  \"CrashLoopBackOff\": constants.FAILED,\n  \"Pending\": constants.PENDING,\n  \"Killing\": constants.NEGATIVE_PROGRESS,\n  \"Pulling\": constants.POSITIVE_PROGRESS,\n  \"Scheduled\": constants.RUNNING,\n  \"Started\": constants.RUNNING,\n};","export const RUNNING = \"Running\";\nexport const FAILED = \"Failed\";\nexport const PENDING = \"Pending\";\nexport const POSITIVE_PROGRESS = \"PProgress\"\nexport const NEGATIVE_PROGRESS = \"NProgress\"\n","const nodes = (state = [], action) => {\n  switch (action.type) {\n\n    case 'NODE_ADDED':\n      const newNode = action.payload;\n      return [...state, newNode];\n\n    case 'NODE_DELETED':\n      return state.filter(s => s.name !== action.payload.name);\n\n    case 'NODE_MODIFIED':\n      const modifiedNode = action.payload;\n      return state.map(node => node.name === action.payload.name ? modifiedNode : node);\n\n    default:\n      return state;\n  }\n}\n\nexport default nodes;","const services = (state = [], action) => {\n  switch (action.type) {\n    case 'DEP_ADDED':\n      return [...state, action.payload];\n    case 'DEP_DELETED':\n      return state.filter(s => s.meta.name !== action.payload.meta.name);\n    case 'DEP_MODIFIED':\n      return state.map(s => {\n        if (s.meta.name === action.payload.meta.name)\n          return action.payload;\n        else\n          return s;\n      });\n    default:\n      return state;\n  }\n}\n\nexport default services;","const meta = (state = {}, action) => {\n  switch (action.type) {\n\n    case 'META':\n      return { ...state, resource: action.payload }\n\n    default:\n      return state;\n  }\n}\n\nexport default meta;","import { combineReducers } from \"redux\";\nimport services from './services';\nimport pods from './pods';\nimport nodes from './nodes';\nimport deployments from './deployments';\nimport meta from './meta';\n\nexport default combineReducers({\n  meta,\n  services,\n  pods,\n  nodes,\n  deployments\n})","export const materialColors = {\n  red: '#F44336',\n  orange: '#FF9800',\n  green: '#4CAF50',\n  gray: '#9E9E9E',\n  blue: '#2196F3',\n  black: '#000',\n  lightGreen: '#8BC34A',\n  teal: '#009688',\n  darkGray: '#666666',\n  lightGray: \"#F7F7F7\"\n}","import React, { Component } from 'react';\nimport { RadialGauge } from 'canvas-gauges';\nimport { materialColors } from '../../common/colors';\n\nclass Meter extends Component {\n\n  getWidth() {\n    return Math.max(\n      document.body.scrollWidth,\n      document.documentElement.scrollWidth,\n      document.body.offsetWidth,\n      document.documentElement.offsetWidth,\n      document.documentElement.clientWidth\n    );\n  }\n\n  getHeight() {\n    return Math.max(\n      document.body.scrollHeight,\n      document.documentElement.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.offsetHeight,\n      document.documentElement.clientHeight\n    );\n  }\n\n  componentDidMount() {\n    const options = Object.assign({}, this.props, {\n      renderTo: this.el,\n      units: this.props.displayValue,\n      width: (this.getWidth() / 6) * 0.9,\n      height: 200,\n      minValue: 0,\n      startAngle: 70,\n      ticksAngle: 220,\n      valueBox: false,\n      maxValue: 1,\n      minorTicks: 1,\n      strokeTicks: false,\n      highlights: this.props.sections,\n      highlightsWidth: 30,\n      ticksWidth: 0,\n      colorPlate: \"#fff\",\n      borderShadowWidth: 0,\n      borders: false,\n      needleType: \"arrow\",\n      needleColor: 'black',\n      needleWidth: 1,\n      needleCircleSize: 10,\n      needleCircleOuter: true,\n      needleCircleInner: false,\n      animationDuration: 1500,\n      animationRule: \"linear\",\n      value: this.props.value,\n      colorMajorTicks: \"transparent\",\n      colorMinorTicks: \"transparent\",\n      title: this.props.title,\n      colorTitle: materialColors.darkGray,\n      colorUnits: materialColors.darkGray,\n      colorNumbers: 'transparent',\n    })\n    this.gauge = new RadialGauge(options).draw()\n  }\n\n  render() {\n    if (this.gauge) {\n      this.gauge.update({\n        highlights: this.props.sections,\n        value: this.props.value,\n        units: this.props.displayValue\n      });\n    }\n    return (\n      <canvas ref={(canvas) => {\n        this.el = canvas\n      }} />\n    );\n  }\n}\n\nexport default Meter;","export const ensureValue = (obj, fallback) => {\n  let returnValue;\n  try {\n    const value = obj();\n    if (!value) {\n      returnValue = fallback;\n    } else {\n      returnValue = value;\n    }\n  } catch (e) {\n    returnValue = fallback;\n  }\n  return returnValue;\n}","import { materialColors } from \"../common/colors\";\nimport { ensureValue } from \"./utils\";\n\nexport const getRequest = resource => {\n  let request = resource.request / resource.capacity;\n  return request = isNaN(request) ? 0 : request;\n}\n\nexport const getLimit = resource => {\n  let resourceLimit = resource.limit / resource.capacity;\n  const request = getRequest(resource);\n  resourceLimit = resourceLimit < request ? request : resourceLimit;\n  return isNaN(resourceLimit) ? 0 : resourceLimit;\n}\n\nexport const getUsage = resource => {\n  let resourceUsage = resource.usage / resource.capacity;\n  const usage = isNaN(resourceUsage) ? 0 : resourceUsage;\n  return usage > 1 ? 1 : usage;\n}\n\nexport const getResourceSectionsAndUsage = resource => {\n  let resourceRequest = getRequest(resource);\n  let resourceLimit = getLimit(resource);\n  let usage = getUsage(resource);\n\n  resourceLimit = resourceLimit >= 1 ? 1 : resourceLimit;\n  resourceRequest = resourceRequest >= 1 ? 1 : resourceRequest;\n\n  resourceLimit = resourceLimit <= 0 && resourceRequest <= 0 ? 1 : resourceLimit;\n\n  let sections = [\n    { from: 0, to: resourceRequest, color: materialColors.green },\n    { from: resourceRequest, to: resourceLimit, color: materialColors.orange },\n    { from: resourceLimit, to: 1.0, color: materialColors.red }\n  ];\n  return { sections, usage };\n}\n\nexport const getNodeSectionsAndUsage = resource => {\n  let resourceRequest = getRequest(resource);\n  let usage = getUsage(resource);\n\n  const colorize = value => {\n    if (value <= 0.7) {\n      return materialColors.green;\n    } else if (value <= 0.9) {\n      return materialColors.orange;\n    } else {\n      return materialColors.red;\n    }\n  }\n\n  resourceRequest = resourceRequest >= 1 ? 1 : resourceRequest;\n\n  let sections = [\n    { from: 0, to: resourceRequest, color: colorize(resourceRequest) },\n    { from: resourceRequest, to: 1.0, color: materialColors.lightGray }\n  ];\n  return { sections, usage };\n}\n\nexport const getSumResources = (pods, resourceCallback) => {\n  let total = 0;\n\n  if (!pods || pods.length <= 0) return total;\n  pods.forEach(p => total += ensureValue(_ => resourceCallback(p), 0));\n\n  return total;\n}","import React, { Component } from 'react';\nimport { Tooltip } from 'antd';\nimport moment from 'moment';\nimport { materialColors } from '../../common/colors';\nconst classNames = require('classnames');\n\nconst statusColors = {\n  Running: materialColors.green,\n  Failed: materialColors.red,\n  Pending: materialColors.gray,\n  PProgress: materialColors.lightGreen,\n  NProgress: materialColors.orange\n}\n\nclass Pod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ts: moment(this.props.created).fromNow() }\n\n    this.classes = classNames({\n      'circle': true,\n      'inner-shadow': true\n    })\n\n  }\n\n  componentDidMount() {\n    setInterval(_ => {\n      this.setState({\n        ts: moment(this.props.created).fromNow()\n      });\n    }, 1000 * 60);\n  }\n\n  render() {\n    return (\n      <Tooltip title={this.props.name}>\n        <div className={this.classes} style={{ backgroundColor: statusColors[this.props.status], margin: 1 }}>\n        </div>\n      </Tooltip>\n    );\n  }\n}\n\nexport default Pod;","import React, { Component } from 'react';\nimport Pod from './Pod';\n\nclass PodList extends Component {\n\n  render() {\n    return (\n      <div style={{ flex: 1, flexDirection: 'row', display: 'flex', ...this.props.style }}>\n        {this.props.data.map(pod => <Pod\n          key={pod.meta.id}\n          name={pod.meta.name}\n          created={pod.meta.created}\n          status={pod.state}\n          request={pod.request}\n          limit={pod.limit}\n          usage={pod.usage} />)}\n      </div>);\n  }\n}\n\nexport default PodList;","import React, { Component } from 'react';\nimport { Col, Row, Divider } from 'antd';\nimport Meter from '../Common/Meter';\nimport { getResourceSectionsAndUsage } from '../../core/resource';\nimport PodList from '../Pod/PodList';\n\nclass Service extends Component {\n\n  render() {\n    const { cpu, memory, name, pods } = this.props;\n\n    let cpuDetail = getResourceSectionsAndUsage(cpu);\n    let memoryDetail = getResourceSectionsAndUsage(memory);\n\n    return (\n      <div>\n        <Col span={8} style={{ padding: 3 }}>\n          <div style={{ background: 'white' }}>\n            <Row >\n              <div style={{\n                fontSize: 18,\n                fontWeight: 500,\n                textAlign: 'center',\n                textTransform: 'uppercase',\n                marginTop: 15,\n                marginBottom: 5\n              }}>{name}</div>\n            </Row>\n            <Row>\n              {/* <Divider style={{ marginTop: 0 }}>{runningPods} out of {totalPods} pods running</Divider> */}\n              <Divider>\n                <PodList data={pods} />\n              </Divider>\n            </Row>\n            <Row style={{ marginTop: 10 }}>\n              <Col span={12}>\n                <Meter\n                  sections={cpuDetail.sections}\n                  value={cpuDetail.usage}\n                  title='CPU' />\n              </Col>\n              <Col span={12}>\n                <Meter\n                  sections={memoryDetail.sections}\n                  value={memoryDetail.usage}\n                  title='Memory' />\n              </Col>\n            </Row>\n            <Row style={{ top: -80, left: -10 }}>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 18 }}>{`${Math.round(cpuDetail.usage * 100)}%`}</Col>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 18 }}>{`${Math.round(memoryDetail.usage * 100)}%`}</Col>\n            </Row>\n          </div>\n        </Col>\n      </div >\n    );\n  }\n}\n\nexport default Service;","import { ensureValue } from \"./utils\";\n\nexport const filterResources = (container, resources) => {\n  if (!resources || resources.length <= 0) return [];\n  return resources.filter(pod => container.pods.includes(pod.meta.name))\n}\n\nexport const findMaxCPUUsageResource = resources => {\n  let maxUsageResource;\n\n  if (!resources || resources.length <= 0) return maxUsageResource;\n\n  resources.reduce((x, y) => {\n    const xUsage = x.usage || { cpu: 0 };\n    const yUsage = y.usage || { cpu: 0 };\n\n    if (xUsage.cpu > yUsage.cpu) {\n      maxUsageResource = x;\n      return x;\n    }\n\n    maxUsageResource = y;\n    return y;\n  })\n  return maxUsageResource;\n}\n\nexport const findNode = (nodes, resource) => {\n\n  if (!nodes || nodes.length <= 0) return;\n  if (!resource) return;\n\n  return nodes.find(n => resource.node === n.name);\n}\n\nexport const getResourcesFromNode = (node, resources) => {\n  if (!resources || resources.length <= 0) return;\n  if (!node) return;\n\n  return resources.filter(r => r.node === node.name);\n}\n\nexport const getAvailableCPU = (node, resource, resources) => {\n  let consumed = 0;\n\n  if (!resources || resources.length <= 0) return 0;\n  if (!node) return 0;\n\n  resources.forEach(r => {\n    if (r.meta.name !== resource.meta.name) {\n      consumed += r.request.cpu || 0;\n    }\n  });\n\n  return node.cpu - consumed;\n}\n\nexport const getCPUMetrics = (container, allResources, nodes) => {\n  const defaultMetrics = {\n    capacity: 0,\n    request: 0,\n    limit: 0,\n    usage: 0\n  }\n\n  if (!allResources || allResources.length <= 0) return defaultMetrics;\n  if (!nodes || nodes.length <= 0) return defaultMetrics;\n\n  const resources = filterResources(container, allResources);\n  const resource = findMaxCPUUsageResource(resources);\n  const node = findNode(nodes, resource);\n  const pods = getResourcesFromNode(node, allResources);\n  const available = getAvailableCPU(node, resource, pods);\n\n  return {\n    capacity: ensureValue(_ => available, 0),\n    request: ensureValue(_ => resource.request.cpu, 0),\n    limit: ensureValue(_ => resource.limit.cpu, 0),\n    usage: ensureValue(_ => resource.usage.cpu, 0)\n  };\n}\n\n////////---------------Memory-----------///////////\n\nexport const findMaxMemoryUsageResource = resources => {\n  let maxUsageResource;\n\n  if (!resources || resources.length <= 0) return maxUsageResource;\n\n  resources.reduce((x, y) => {\n    const xUsage = x.usage || { memory: 0 };\n    const yUsage = y.usage || { memory: 0 };\n\n    if (xUsage.cpu > yUsage.cpu) {\n      maxUsageResource = x;\n      return x;\n    }\n\n    maxUsageResource = y;\n    return y;\n  })\n  return maxUsageResource;\n}\n\nexport const getAvailableMemory = (node, resource, resources) => {\n  let consumed = 0;\n\n  if (!resources || resources.length <= 0) return 0;\n  if (!node) return 0;\n\n  resources.forEach(r => {\n    if (r.meta.name !== resource.meta.name) {\n      consumed += r.request.memory || 0;\n    }\n  });\n  return node.memory - consumed;\n}\n\nexport const getUMemoryMetrics = (container, allResources, nodes) => {\n  const defaultMetrics = {\n    capacity: 0,\n    request: 0,\n    limit: 0,\n    usage: 0\n  }\n\n  if (!allResources || allResources.length <= 0) return defaultMetrics;\n  if (!nodes || nodes.length <= 0) return defaultMetrics;\n\n  const resources = filterResources(container, allResources);\n  const resource = findMaxMemoryUsageResource(resources);\n  const node = findNode(nodes, resource);\n  const pods = getResourcesFromNode(node, allResources);\n  const available = getAvailableMemory(node, resource, pods);\n\n  return {\n    capacity: ensureValue(_ => available, 0),\n    request: ensureValue(_ => resource.request.memory, 0),\n    limit: ensureValue(_ => resource.limit.memory, 0),\n    usage: ensureValue(_ => resource.usage.memory, 0)\n  };\n}","import { connect } from 'react-redux';\nimport Service from '../components/Service/Service';\nimport { getCPUMetrics, getUMemoryMetrics, filterResources } from '../core';\n\nconst mapStateToProps = (state, ownProps) => {\n\n  const service = state.services.find(s => s.meta.name === ownProps.name);\n  const cpuMetrics = getCPUMetrics(service, state.pods, state.nodes);\n  const memoryMetrics = getUMemoryMetrics(service, state.pods, state.nodes);\n  const resources = filterResources(service, state.pods);\n  const runningPodsLength = resources.filter(p => p.state === 'Running').length;\n\n  return {\n    name: service.meta.name,\n    ip: service.ip,\n    cpu: cpuMetrics,\n    memory: memoryMetrics,\n    hasWarning: (resources.length - runningPodsLength) > 0,\n    podAvailability: `${runningPodsLength} out of ${resources.length} pods available`,\n    pods: resources\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Service)","import React, { Component } from 'react';\nimport { Col, Empty } from 'antd';\n\nclass Loading extends Component {\n\n  render() {\n    return (\n      <div style={{ width: `100%`, height: `100%`, backgroundColor: 'white' }}>\n        <Col span={8} />\n        <Col span={8} >\n          <Empty\n            style={{ marginTop: `45%` }}\n            description={\n              <h3 style={{color: 'gray'}}>\n                Loading cluster data...\n              </h3>\n            }\n          />\n        </Col>\n        <Col span={8} />\n      </div>\n    );\n  }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { Row } from 'antd';\nimport Service from '../../containers/Service';\nimport Loading from '../Common/Loading';\n\nclass ServiceList extends Component {\n\n  componentDidMount() {\n    this.props.initialize();\n  }\n\n  render() {\n\n    if (!this.props.data || this.props.data.length === 0) {\n      return <Loading />\n    }\n\n    return (\n      <div>\n        <Row >\n          {this.props.data.map(item => (\n            <Service key={item.meta.key} name={item.meta.name} />))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default ServiceList;","export const initializeConnection = (dispatch, path) => {\n  var socket = new WebSocket(`ws://${window.location.host}/${path}`);\n  socket.onopen = _ => console.log('Connected Socket');\n  socket.onmessage = e => onMessage(dispatch, e);\n}\n\nconst onMessage = (dispatch, e) => {\n  const obj = JSON.parse(e.data);\n  const resource = obj.resource;\n\n  dispatch({\n    type: obj.action,\n    payload: resource\n  });\n}\n","import { connect } from 'react-redux';\nimport ServiceList from '../components/Service/ServiceList';\nimport { initializeConnection } from '../actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.services\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initialize: _ => initializeConnection(dispatch, 'service')\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ServiceList)","import React, { Component } from 'react';\nimport { materialColors } from '../../common/colors';\nimport { LinearGauge } from 'canvas-gauges';\n\nclass LinearMeter extends Component {\n\n  componentDidMount() {\n    const options = Object.assign({}, this.props, {\n      renderTo: this.el,\n      width: 150,\n      height: 230,\n      minValue: 0,\n      maxValue: 1,\n      majorTicks: [\n        \"0\",\n        \"0.95\"\n      ],\n      valueBox: false,\n      minorTicks: 3,\n      strokeTicks: false,\n      colorPlate: \"#fff\",\n      borderShadowWidth: 0,\n      borders: false,\n      borderOuterWidth: 0,\n      borderInnerWidth: 0,\n      barBeginCircle: false,\n      tickSide: \"right\",\n      numberSide: \"right\",\n      needleSide: \"left\",\n      needleShadow: true,\n      needleType: \"arrow\",\n      needleWidth: 15,\n      needleStart: -70,\n      needleEnd: 20,\n      colorNeedle: \"#222\",\n      colorNeedleEnd: \"#222\",\n      animationDuration: 1500,\n      animationRule: \"linear\",\n      animationTarget: \"plate\",\n      barWidth: 6,\n      ticksWidth: 60,\n      highlightsWidth: 60,\n      colorNumbers: 'white, red',\n      title: 'CPU',\n      fontNumbersSize: 1,\n      ticksWidthMinor: 0,\n      animateOnInit: true,\n      highlights: this.props.sections,\n      value: this.props.value,\n      fontTitleSize: 1,\n      colorBarProgress: this.props.value < 0.6 ? materialColors.green : materialColors.orange\n    })\n    this.gauge = new LinearGauge(options).draw();\n  }\n\n  render() {\n    if (this.gauge) {\n      this.gauge.update({\n        highlights: this.props.sections,\n        value: this.props.value,\n        colorBarProgress: this.props.value < 0.6 ? materialColors.green : materialColors.orange\n      });\n    }\n    return (\n      <div>\n        <canvas style={{ marginTop: 0 }} ref={(canvas) => {\n          this.el = canvas\n        }} />\n      </div>\n    );\n  }\n}\n\nexport default LinearMeter;","import React, { Component } from 'react';\nimport { Col, Row, Divider } from 'antd';\nimport { getNodeSectionsAndUsage } from '../../core/resource';\nimport LinearMeter from '../Common/LinearMeter';\nimport { materialColors } from '../../common/colors';\nconst classNames = require('classnames');\n\nconst exclamation = <img src=\"https://img.icons8.com/ios-glyphs/30/ffffff/exclamation-mark.png\" alt='warning' style={{ width: 20 }} />\n\nconst tick = <img src=\"https://img.icons8.com/ios-glyphs/30/ffffff/checkmark.png\" alt='success' style={{ width: 20 }} />\n\nclass Node extends Component {\n  render() {\n    const { cpu, memory, readyStatus, name } = this.props;\n\n    let cpuDetail = getNodeSectionsAndUsage(cpu);\n    let memoryDetail = getNodeSectionsAndUsage(memory);\n    this.classes = classNames({\n      'circle-lg': true,\n      'inner-shadow': true\n    })\n\n    return (\n      <div>\n        <Col span={8} style={{ padding: 3 }}>\n          <div style={{ background: 'white' }}>\n            <Row style={{ top: 10 }}>\n              <div className={this.classes} style={{\n                backgroundColor: readyStatus ? materialColors.green : materialColors.red,\n                margin: 'auto',\n              }} >\n                {readyStatus ? tick : exclamation}\n              </div>\n            </Row>\n            <Row>\n              <Divider style={{ marginTop: 0, top: 15 }}>\n                <span style={{\n                  fontSize: 14,\n                  fontWeight: 500,\n                  textAlign: 'center',\n                  textTransform: 'uppercase',\n                  marginTop: 15,\n                  marginBottom: 5,\n                }}>\n                  {name}\n                </span>\n              </Divider>\n            </Row>\n            <Row style={{ top: 10, zIndex: 10 }}>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 20 }}><b>{Math.round((cpu.usage / cpu.capacity) * 100.0)}%</b></Col>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 20 }}><b>{Math.round((memory.usage / memory.capacity) * 100)}%</b></Col>\n            </Row>\n            <Row style={{ top: -15 }}>\n              <Col span={12}>\n                <LinearMeter\n                  sections={cpuDetail.sections}\n                  value={cpuDetail.usage}\n                  displayValue={`${Math.round(cpuDetail.usage * 100)}%`}\n                  title='CPU' />\n              </Col>\n              <Col span={12}>\n                <LinearMeter\n                  sections={memoryDetail.sections}\n                  value={memoryDetail.usage}\n                  displayValue={`${Math.round(memoryDetail.usage * 100)}%`}\n                  title='Memory' />\n              </Col>\n            </Row>\n            <Row style={{ top: -20 }}>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 16 }}>CPU</Col>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 16 }}>Memory</Col>\n            </Row>\n          </div>\n        </Col>\n      </div>\n    );\n  }\n}\n\nexport default Node;","import { connect } from 'react-redux';\nimport Node from '../components/Node/Node';\nimport { findNode, getResourcesFromNode } from '../core';\nimport { getSumResources } from '../core/resource';\n\nconst mapStateToProps = (state, ownProps) => {\n  const node = findNode(state.nodes, { node: ownProps.name });\n  const currentPods = getResourcesFromNode(node, state.pods);\n\n  return {\n    cpu: {\n      request: getSumResources(currentPods, p => p.request.cpu),\n      capacity: node.cpu,\n      usage: getSumResources(currentPods, p => p.usage.cpu)\n    },\n    memory: {\n      request: getSumResources(currentPods, p => p.request.memory),\n      capacity: node.memory,\n      usage: getSumResources(currentPods, p => p.usage.memory)\n    },\n    name: ownProps.name,\n    readyStatus: node.readyStatus\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Node)","import React, { Component } from 'react';\nimport { Row } from 'antd';\nimport Node from '../../containers/Node';\nimport Loading from '../Common/Loading';\n\nclass NodeList extends Component {\n\n  componentDidMount() {\n    this.props.initialize();\n  }\n\n  render() {\n\n    if (!this.props.data || this.props.data.length === 0) {\n      return <Loading />\n    }\n\n    return (\n      <div>\n        <Row >\n          {this.props.data.map(item => (\n            <Node key={item.name} name={item.name} />))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default NodeList;\n\n","import { connect } from 'react-redux';\nimport { initializeConnection } from '../actions';\nimport NodeList from '../components/Node/NodeList';\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.nodes\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initialize: _ => initializeConnection(dispatch, 'node')\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeList)","import { Col, Divider, Row } from 'antd';\nimport React, { Component } from 'react';\nimport { getResourceSectionsAndUsage } from '../../core/resource';\nimport Meter from '../Common/Meter';\nimport PodList from '../Pod/PodList';\n\nclass Deployment extends Component {\n\n  render() {\n    const { cpu, memory, name, pods } = this.props;\n\n    let cpuDetail = getResourceSectionsAndUsage(cpu);\n    let memoryDetail = getResourceSectionsAndUsage(memory);\n\n    return (\n      <div>\n        <Col span={8} style={{ padding: 3 }}>\n          <div style={{ background: 'white' }}>\n            <Row >\n              <div style={{\n                fontSize: 18,\n                fontWeight: 500,\n                textAlign: 'center',\n                textTransform: 'uppercase',\n                marginTop: 15,\n                marginBottom: 5\n              }}>{name}</div>\n            </Row>\n            <Row>\n              <Divider>\n                <PodList data={pods} />\n              </Divider>\n            </Row>\n            <Row style={{ marginTop: 10 }}>\n              <Col span={12}>\n                <Meter\n                  sections={cpuDetail.sections}\n                  value={cpuDetail.usage}\n                  title='CPU' />\n              </Col>\n              <Col span={12}>\n                <Meter\n                  sections={memoryDetail.sections}\n                  value={memoryDetail.usage}\n                  title='Memory' />\n              </Col>\n            </Row>\n            <Row style={{ top: -80, left: -10 }}>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 18 }}>{`${Math.round(cpuDetail.usage * 100)}%`}</Col>\n              <Col span={12} style={{ textAlign: 'center', fontSize: 18 }}>{`${Math.round(memoryDetail.usage * 100)}%`}</Col>\n            </Row>\n          </div>\n        </Col>\n      </div >\n    );\n  }\n}\n\nexport default Deployment;","import { connect } from 'react-redux';\nimport { getCPUMetrics, getUMemoryMetrics, filterResources } from '../core';\nimport Deployment from '../components/Deployment/Deployment';\n\nconst mapStateToProps = (state, ownProps) => {\n\n  const deployment = state.deployments.find(s => s.meta.name === ownProps.name);\n  const cpuMetrics = getCPUMetrics(deployment, state.pods, state.nodes);\n  const memoryMetrics = getUMemoryMetrics(deployment, state.pods, state.nodes);\n  const resources = filterResources(deployment, state.pods);\n  const runningPodsLength = resources.filter(p => p.state === 'Running').length;\n\n  return {\n    name: deployment.meta.name,\n    ip: deployment.ip,\n    cpu: cpuMetrics,\n    memory: memoryMetrics,\n    hasWarning: (resources.length - runningPodsLength) > 0,\n    podAvailability: `${runningPodsLength} out of ${resources.length} pods available`,\n    pods: resources\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Deployment)","import React, { Component } from 'react';\nimport { Row } from 'antd';\nimport Deployment from '../../containers/Deployment';\nimport Loading from '../Common/Loading';\n\nclass DeploymentList extends Component {\n\n  componentDidMount() {\n    this.props.initialize();\n  }\n\n  render() {\n\n    if (!this.props.data || this.props.data.length === 0) {\n      return <Loading />\n    }\n\n    return (\n      <div>\n        <Row >\n          {this.props.data.map(item => (\n            <Deployment key={item.meta.key} name={item.meta.name} />))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default DeploymentList;","import { connect } from 'react-redux';\nimport { initializeConnection } from '../actions';\nimport DeploymentList from '../components/Deployment/DeploymentList';\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.deployments\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initialize: _ => initializeConnection(dispatch, 'deployment')\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeploymentList)","import React, { Component } from 'react';\nimport ServiceList from '../containers/ServiceList';\nimport NodeList from '../containers/NodeList';\nimport DeploymentList from '../containers/DeploymentList';\nimport { Alert } from 'antd';\nimport Loading from './Common/Loading';\n\nclass Root extends Component {\n\n  componentDidMount() {\n    this.props.initialize();\n  }\n\n  render() {\n\n    if (!this.props.resource) {\n      return <Loading />\n    }\n\n    switch (this.props.resource) {\n      case 'deployment':\n        return <div style={rootStyle} ><DeploymentList /></div>;\n      case 'service':\n        return <div style={rootStyle} ><ServiceList /></div>;\n      case 'node':\n        return <div style={rootStyle} ><NodeList /></div>;\n      default:\n        return (\n          <div>\n            <Alert\n              message=\"Resource not supported\"\n              description=\"Requested resource not supported by kubex.\"\n              type=\"error\"\n            />\n          </div>\n        );\n    }\n  }\n}\n\nconst rootStyle = {\n  backgroundColor: 'lightgray',\n  height: `100%`\n}\n\nexport default Root;\n\n","import { connect } from 'react-redux';\nimport Root from '../components/Root';\nimport { initializeConnection } from '../actions';\n\nconst mapStateToProps = (state) => {\n  return state && state.meta && state.meta.resource;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initialize: _ => initializeConnection(dispatch, 'meta')\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Root)","import moment from 'moment';\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport './App.css';\nimport kubeState from './reducers';\nimport Root from './containers/Root';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(kubeState, composeEnhancers(applyMiddleware(thunk)));\n\nmoment.locale('en', {\n  relativeTime: {\n    future: \"in %s\",\n    past: \"%s\",\n    s: \"1s\",\n    m: \"1m\",\n    mm: \"%dm\",\n    h: \"1h\",\n    hh: \"%dh\",\n    d: \"1d\",\n    dd: \"%dd\",\n    M: \"1M\",\n    MM: \"%dM\",\n    y: \"1y\",\n    yy: \"%dy\"\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Root />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}